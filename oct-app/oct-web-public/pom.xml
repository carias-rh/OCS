<?xml version="1.0"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>oct-app</artifactId>
		<groupId>eu.europa.ec.eci.oct</groupId>
		<version>5.0.0</version>
	</parent>
	<artifactId>oct-web-public</artifactId>
	<packaging>war</packaging>
	<name>oct-web-public Maven Webapp</name>

	<properties>
		<org.springframework.version>5.0.7.RELEASE</org.springframework.version>
		<org.springframework.security.version>5.0.7.RELEASE</org.springframework.security.version>
		<timeStamp>${maven.build.timestamp}</timeStamp>
		<skip.public>false</skip.public>
	</properties>

	<build>
		<finalName>oct-web-public</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.0.1</version>
				<executions>
					<execution>
						<id>prepare-war</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>exploded</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- start Maven plugin for Angular -->
			<!-- Note : if npm is not able to access internet configure and run : 
				npm config set http_proxy http://urusrid:pwd@158.169.9.13:8012 npm config 
				set proxy http://urusrid:pwd@158.169.9.13:8012 -->

			<!-- NPM INSTALL & NPM BUILD PROD -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<skip>${skip.public}</skip>
				</configuration>
				<executions>
					<execution>
						<id>angular-npm-install</id>
						<phase>generate-sources</phase>
						<configuration>
							<workingDirectory>${project.basedir}/src/main/resources/angular</workingDirectory>
							<executable>npm</executable>
							<arguments>
								<argument>install</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
					<execution>
						<id>angular-npm-run-build-prod</id>
						<phase>compile</phase>
						<configuration>
							<workingDirectory>${project.basedir}/src/main/resources/angular</workingDirectory>
							<executable>npm</executable>
							<arguments>
								<argument>run</argument>
								<argument>build-prod</argument>
							</arguments>
						</configuration>
						<goals>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- CLEAN webapp from old angular files -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<version>2.4.1</version>
				<configuration>
					<skip>${skip.public}</skip>
					<filesets>
						<fileset>
							<directory>${project.basedir}/src/main/webapp/</directory>
							<includes>
								<include>**/inline*</include>
								<include>**/main*</include>
								<include>**/scripts*</include>
								<include>**/styles*</include>
								<include>**/vendor*</include>
								<include>**/Roboto*</include>
								<include>**/group*</include>
								<include>**/glyphicons*</include>
								<include>**/favicon*</include>
								<include>**/alert*</include>
								<include>**/3rdparty*</include>
								<include>**/share-this*</include>
								<include>**/trama*</include>
								<include>**/eui*</include>
								<include>**/font*</include>
								<include>**/prime*</include>
								<include>**/*css</include>
							</includes>
							<excludes>
								<exclude>asset</exclude>
								<exclude>css</exclude>
								<exclude>i18n</exclude>
								<exclude>images</exclude>
								<exclude>js</exclude>
								<exclude>pdf</exclude>
								<exclude>WEB-INF</exclude>
							</excludes>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
				<executions>
					<execution>
						<id>angular-clean-webapp</id>
						<phase>clean</phase>
					</execution>
				</executions>
			</plugin>
			<!-- COPY newly builded angular script to webapp -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<configuration>
					<skip>${maven.skip.public}</skip>
				</configuration>
				<executions>
					<execution>
						<id>angular-dist-copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<overwrite>true</overwrite>
							<outputDirectory>${project.basedir}/src/main/webapp</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/resources/angular/dist</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- end Maven plugin for Angular -->

		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/version.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/version.properties</exclude>
					<exclude>angular/**</exclude>
					<exclude>e2e/**</exclude>
					<exclude>dist/**</exclude>
					<exclude>node_modules/**</exclude>
				</excludes>
			</resource>
		</resources>
	</build>

	<dependencies>
<dependency>
    <groupId>org.codehaus.mojo</groupId>
    <artifactId>exec-maven-plugin</artifactId>
    <version>3.0.0</version>
</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${org.springframework.security.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-asm</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${org.springframework.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>
		<dependency>
			<groupId>eu.europa.ec.eci.oct</groupId>
			<artifactId>oct-web-commons</artifactId>
			<version>${project.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.core</groupId>
			<artifactId>jersey-server</artifactId>
			<version>${jersey.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-servlet-core</artifactId>
			<version>${jersey.version}</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
